**Patrones de Diseño Aplicados en ComfyChair**

1. **Factory Method**:
   - La clase `Conferencia` tiene un método `crearSesion` que usa un Factory Method para crear instancias de `SesionRegular`, `SesionWorkshop`, y `SesionPoster` basado en un parámetro `tipo`.

2. **Template Method**:
   - La clase abstracta `Sesion` define el método `seleccionarArticulos` que establece un esqueleto de un algoritmo para seleccionar artículos. Las subclases pueden redefinir pasos del algoritmo sin cambiar la estructura general del método.
   - También, los métodos `validarFormato` en las clases `SesionRegular`, `SesionWorkshop` y `SesionPoster` siguen el patrón template method.

3. **Strategy**:
   - El patrón Strategy se encuentra en cómo las sesiones implementan diferentes estrategias para validar el formato de los artículos (`validarFormato`).

4. **Composite**:
   - En la clase `Usuario`, se usa una estructura de roles donde un usuario puede tener múltiples roles (`Rol`, `Autor`, `Revisor`, `Chair`). Esto demuestra una relación Composite donde los usuarios contienen roles que pueden ser tratados de manera individual o en conjunto.